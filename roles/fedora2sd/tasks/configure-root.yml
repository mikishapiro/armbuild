---
- name: create a .ssh directory
  become: true
  file:
    name: "{{ location }}/root/.ssh"
    mode: '0700'
    state: directory
  when: pubkey is defined

- name: create a file
  become: true
  file:
    path: "{{ location }}/root/.ssh/authorized_keys"
    mode: '0600'
    state: touch
  when: pubkey is defined

- name: Set appropriate permissions on the authorized_keys file
  become: true
  lineinfile:
    path: "{{ location }}/root/.ssh/authorized_keys"
    line: "{{ pubkey }}"
    state: present
  when: pubkey is defined

- name: Set root password
  become: true
  lineinfile:
    path: "{{ location }}/etc/shadow"
    state: present
    line: 'root:{{ rootpasswordhash }}::0:99999:7:::'
    regexp: '^root:'
  when: rootpasswordhash is defined

- name: Set hostname
  become: true
  copy:
    dest: "{{ location }}/etc/hostname"
    mode: 0640
    content: |
      {{ pi_hostname }}
  when: pi_hostname is defined

- name: Permit root login via ssh
  become: true
  lineinfile:
    path: "{{ location }}/etc/ssh/sshd_config"
    state: present
    line: "PermitRootLogin true"
    regexp: '^PermitRootLogin'

- name: Remove boot and boot/efi lines in fstab
  become: true
  lineinfile:
    path: "{{ location }}/etc/fstab"
    state: absent
    regexp: '^.* /boot.*'

- name: Add boot to fstab
  become: true
  lineinfile:
    path: "{{ location }}/etc/fstab"
    state: present
    line: "/dev/mmcblk0p1 /boot vfat defaults,noatime 0 0"
    regexp: '^.* / .*'

- name: Replace root line in fstab
  become: true
  lineinfile:
    path: "{{ location }}/etc/fstab"
    state: present
    line: "/dev/mmcblk0p2 /     ext4 defaults,noatime 0 0"
    regexp: '^.* / .*'

- name: Copy over raspbian kernel modules
  become: true
  command: "cp -uvrfp {{ raspbian_location }}/lib/modules {{ location }}/usr/lib"

- name: Copy over firmware
  become: true
  command: "cp -uvrfp {{ raspbian_location }}/lib/firmware {{ location }}/lib"

- name: Copy over raspbian modprobe.d blacklist
  become: true
  command: 'cp -uvrfp {{ raspbian_location }}/etc/modprobe.d/. {{ location }}/etc/modprobe.d/'

- name: "Deploy the {{ network.device }} network static interface configuration"
  become: true
  template:
    src: templates/ifcfg.j2
    dest: "{{ location }}/etc/sysconfig/network-scripts/ifcfg-{{ network.device }}"
    mode: 0640
  when: network.bootproto != "dhcp"

- name: "Deploy the {{ network.device }} nic configuration"
  become: true
  template:
    mode: 0640
    src: templates/ifcfg-dhcp.j2
    dest: "{{ location }}/etc/sysconfig/network-scripts/ifcfg-{{ network.device }}"
  when: network.bootproto == "dhcp"

- name: Disable the initial-setup and other unneeded services
  become: true
  file:
    path: "{{ location }}/etc/systemd/system/multi-user.target.wants/{{ item }}.service"
    state: absent
  loop:
    - initial-setup
    - abrtd
    - abrt-journal-core
    - abrt-oops
    - abrt-vmcore
    - abrt-xorg
    - cups
    - nfs-client
    - vboxservice
    - vmtoolsd
    - ModemManager
    - rngd
    - avahi-daemon
    - auditd
    - smartd
    - libvirtd
    - remote-fs
