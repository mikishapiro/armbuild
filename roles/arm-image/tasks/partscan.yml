---
# tasks file for armulator
- set_fact:
    partflags: []
    lvm: ""

- name: Read device information
  parted:
    device: "{{ image }}"
    unit: B
  register: raw_part

- name: Concatenate partition flags to check if there are lvm ones
  set_fact:
    partflags: "{{ partflags + item.flags }}"
  loop: "{{ raw_part.partitions }}"

- name: Enable lvm handling if an lvm flag is found
  set_fact:
    lvm: true
  loop: "{{ partflags }}"
  when: item == "lvm"

- name: Select the main partition
  set_fact:
    root_partition:
      - "{{ raw_part.partitions|last }}"
  when: lvm != true

- name: Install the image handling packages
  become: true
  when: lvm == true
  package:
    state: latest
    name:
      - kpartx

- name: Invoke kparts to make lvm partitions in raw image file visible to lvm
  become: true
  command: "kpartx -av {{ image }}"
  register: kpartx_output
  when: lvm == true

- name: Get LVM volume group name
  become: true
  shell: "pvs -o +vg_uuid | grep loop | awk '{print $2}'"
  register: vgname_output
  when:
  - lvm == true

- name: Get LVM volume group UUID
  become: true
  shell: "pvs -o +vg_uuid | grep loop | awk '{print $7}'"
  register: vguuid_output
  when:
  - lvm == true
  - vgname_output.stdout != 'fedoraarm'

- name: Rename volume group
  become: true
  command: "vgrename {{ vguuid_output.stdout }} fedoraarm"
  when:
  - lvm == true
  - vgname_output.stdout != 'fedoraarm'

- name: Set the rootpart if fedora aarch64 lvm is used
  set_fact:
    root_partition:
      - begin: "0"
        fstype: "xfs"
  when: lvm == true

- set_fact:
    remaining_parts: "{{ raw_part.partitions | difference( root_partition ) }}"
  when: lvm != true

- set_fact:
    boot_partition:
      - "{{ remaining_parts|last }}"
  when: lvm != true
